# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'BlueVisionAzure'
  
  # Web app name
  webAppName: 'EdgarApi'
  
  # Environment name
  environmentName: 'Production'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # Build Configuration
  buildConfiguration: 'Release'

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build and Publish stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build the API
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

  - job: Publish
    displayName: Publish
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Publish the API
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy the EdgarApi Azure Web App'
            inputs:
              ConnectionType: AzureRM
              azureSubscription: '$(azureSubscription)'
              appType: 'webApp'
              WebAppName: 'EdgarApi'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
